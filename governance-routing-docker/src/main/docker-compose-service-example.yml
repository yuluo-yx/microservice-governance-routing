version: "3.8"
services:

  # routing provider example
  label-routing-service-provider:
    image: ${DOCKER_PREFIX}-service-provider
    env_file:
      - .env
    build:
      dockerfile: label-routing-service-provider-example/DockerFile
      context: .
      args:
        APP_HOME: ${APP_HOME}
    container_name: ${DOCKER_PREFIX}-service-provider
    restart: on-failure
    volumes:
      - ./label-routing-service-provider-example:${APP_HOME}
      - /etc/localtime:/etc/localtime
    expose:
      - ${PROVIDER_PORT_A1}
      - ${PROVIDER_PORT_A2}
      - ${PROVIDER_PORT_A3}
      - ${PROVIDER_PORT_A4}
      - ${ACTUATOR_PROVIDER_PORT_A1}
      - ${ACTUATOR_PROVIDER_PORT_A2}
      - ${ACTUATOR_PROVIDER_PORT_A3}
      - ${ACTUATOR_PROVIDER_PORT_A4}
    ports:
      - ${PROVIDER_PORT_A1}:${PROVIDER_PORT_A1}
      - ${PROVIDER_PORT_A2}:${PROVIDER_PORT_A3}
      - ${PROVIDER_PORT_A3}:${PROVIDER_PORT_A3}
      - ${PROVIDER_PORT_A4}:${PROVIDER_PORT_A4}
      - ${ACTUATOR_PROVIDER_PORT_A1}:${ACTUATOR_PROVIDER_PORT_A1}
      - ${ACTUATOR_PROVIDER_PORT_A2}:${ACTUATOR_PROVIDER_PORT_A2}
      - ${ACTUATOR_PROVIDER_PORT_A3}:${ACTUATOR_PROVIDER_PORT_A3}
      - ${ACTUATOR_PROVIDER_PORT_A4}:${ACTUATOR_PROVIDER_PORT_A4}
    depends_on:
      - label-routing-service-nacos
    networks:
      - label-routing

  label-routing-nginx:
    image: nginx:latest
    container_name: ${DOCKER_PREFIX}-nginx
    restart: on-failure
    healthcheck:
      test: wget --spider https://127.0.0.1/health || exit 1
      interval: 60s
      timeout: 30s
      retries: 2
      start_period: 5m
    volumes:
      - ./nginx/conf.g/conf:/etc/nginx/conf.d/default.conf
      - ./nginx/html:/usr/share/nginx/html
    expose:
      - ${INNER_NGINX_PORT}
    ports:
      - ${NGINX_PORT}:${INNER_NGINX_PORT}
    networks:
      - label-routing

  label-routing-portainer:
    image: portainer/portainer-ce:latest
    container_name: ${DOCKER_PREFIX}-portainer
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    expose:
      - ${INNER_PORTAINER_PORT}
    ports:
      - ${PORTAINER_PORT}:${INNER_PORTAINER_PORT}
    networks:
      - label-routing

  mysql:
    image: mysql:8.0.31
    container_name: ${DOCKER_PREFIX}mysql
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent" ]
      interval: 10s
      retries: 10
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - ${MYSQL_PORT}:${INNER_MYSQL_PORT}
    volumes:
      - ./mysql/init.d/nacos-db.sql:/docker-entrypoint-initdb.d/nacos-db.sql
    networks:
      - label-routing
    command:
      [
        --character-set-server=utf8mb4,
        --collation-server=utf8mb4_unicode_ci,
        --default-authentication-plugin=mysql_native_password
      ]

  label-routing-service-nacos:
    image: nacos/nacos-server:v2.3.0
    restart: always
    container_name: ${DOCKER_PREFIX}-nacos-server
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8848/nacos/v1/console/health/readiness" ]
      interval: 10s
      timeout: 20s
      retries: 10
    env_file:
      - .env
      - ./nacos/nacos-standalone-mysql.env
    ports:
      - ${NACOS_PORT}:${NACOS_PORT}
      - ${NACOS_GRPC_PORT}:${NACOS_GRPC_PORT}
    networks:
      - label-routing
    depends_on:
      mysql:
        condition: service_healthy

networks:
  label-routing:
    external: false
